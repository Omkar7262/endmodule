# Generated by Django 5.1.2 on 2024-10-17 12:36

import Authentication.models
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='PermissionPattern',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('module', models.CharField(max_length=30, verbose_name='Module')),
                ('method', models.CharField(choices=[('create', 'Create'), ('update', 'Update'), ('view', 'View'), ('delete', 'Delete')], max_length=30, verbose_name='Component')),
                ('user_type', models.IntegerField(blank=True, choices=[(1, 'Admin'), (2, 'Vendor'), (3, 'Client')], default=1, null=True, verbose_name='User Type')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('profile', models.FileField(blank=True, null=True, upload_to='profile', verbose_name='Profile')),
                ('first_name', models.CharField(blank=True, max_length=20, null=True)),
                ('last_name', models.CharField(blank=True, max_length=20, null=True)),
                ('display_name', models.CharField(blank=True, max_length=255)),
                ('Address', models.TextField(blank=True, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True, verbose_name='Email')),
                ('mobile', models.CharField(blank=True, max_length=20, null=True, verbose_name='Mobile')),
                ('city', models.CharField(blank=True, max_length=25, null=True, verbose_name='City')),
                ('user_type', models.IntegerField(blank=True, choices=[(1, 'Admin'), (2, 'Vendor'), (3, 'Client')], default=1, null=True, verbose_name='User Type')),
                ('contact_info', models.JSONField(blank=True, max_length=255, null=True, verbose_name='Contact Info')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_phone_verified', models.BooleanField(default=False)),
                ('is_email_verified', models.BooleanField(default=False)),
                ('reason', models.TextField(blank=True, null=True, verbose_name='User Block Reason')),
                ('phone_otp', models.IntegerField(blank=True, null=True)),
                ('expiry_phone_otp', models.DateTimeField(default=django.utils.timezone.now)),
                ('email_otp', models.IntegerField(blank=True, null=True)),
                ('expiry_email_otp', models.DateTimeField(default=django.utils.timezone.now)),
                ('gst', models.CharField(blank=True, max_length=256, null=True, verbose_name='GST')),
                ('cn', models.CharField(blank=True, max_length=256, null=True, verbose_name='Company Name')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Address')),
                ('at', models.IntegerField(blank=True, choices=[(1, 'Saving'), (2, 'Current')], null=True, verbose_name='Account Type')),
                ('bn', models.CharField(blank=True, max_length=50, null=True, verbose_name='Bank Name')),
                ('ahn', models.CharField(blank=True, max_length=50, null=True, verbose_name='Account Holder Name')),
                ('ac_no', models.CharField(blank=True, max_length=15, null=True, verbose_name='Account Number')),
                ('ifsc', models.CharField(blank=True, max_length=50, null=True, verbose_name='IFSC Code')),
                ('upi', models.CharField(blank=True, max_length=50, null=True, verbose_name='UPI id')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=models.SET(Authentication.models.setSuperUser), related_name='created_by_user', to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('permission', models.ManyToManyField(blank=True, to='Authentication.permissionpattern', verbose_name='user_permission')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'swappable': 'AUTH_USER_MODEL',
            },
            managers=[
                ('objects', Authentication.models.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('rn', models.CharField(help_text='Role Name', max_length=50, null=True, verbose_name='User Role Name')),
                ('pur', models.ForeignKey(blank=True, help_text='Parent User Role Name', null=True, on_delete=django.db.models.deletion.CASCADE, to='Authentication.userrole', verbose_name='Parent User Role')),
                ('up', models.ManyToManyField(to='Authentication.permissionpattern', verbose_name='user_permission')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='permissionpattern',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='OneTimePassword',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('one_time_password_for_mobile', models.IntegerField(blank=True, null=True)),
                ('one_time_password_for_email', models.IntegerField(blank=True, null=True)),
                ('process', models.IntegerField(choices=[(1, 'SignUp'), (2, 'Login')], default=1)),
                ('expiryDate', models.DateTimeField(default=Authentication.models.setExpiryDateTimeForOTP)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='onetimepassword_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
